// <auto-generated />
using System;
using InfraFlow.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InfraFlow.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250302181622_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InfraFlow.Domain.AuditLog.Entities.AppAuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AppSnapshotId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid?>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<string>("EntityId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("EntityState")
                        .HasColumnType("integer");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<Guid?>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AppSnapshotId");

                    b.HasIndex("CorrelationId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("SessionId");

                    b.ToTable("AppAuditLogs", (string)null);
                });

            modelBuilder.Entity("InfraFlow.Domain.AuditLog.Entities.AppEntityPropertyChange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AppAuditLogId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AppSnapshotId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuditLogId")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid?>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("NewValue")
                        .HasColumnType("text");

                    b.Property<string>("OriginalValue")
                        .HasColumnType("text");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("PropertyTypeFullName")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<Guid?>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AppAuditLogId");

                    b.HasIndex("AppSnapshotId");

                    b.HasIndex("AuditLogId");

                    b.HasIndex("CorrelationId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("SessionId");

                    b.ToTable("AppEntityPropertyChanges", (string)null);
                });

            modelBuilder.Entity("InfraFlow.Domain.Entities.Todo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AppSnapshotId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid?>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DeleterId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifierId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid?>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AppSnapshotId");

                    b.HasIndex("CorrelationId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("DeleterId");

                    b.HasIndex("LastModifierId");

                    b.HasIndex("SessionId");

                    b.ToTable("AppTodos", (string)null);
                });

            modelBuilder.Entity("InfraFlow.Domain.ExceptionLog.Entities.AppExceptionLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AppSnapshotId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid?>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("InnerException")
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("ResponseBody")
                        .HasColumnType("text");

                    b.Property<Guid?>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<string>("StackTrace")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("AppSnapshotId");

                    b.HasIndex("CorrelationId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("SessionId");

                    b.ToTable("AppExceptionLogs", (string)null);
                });

            modelBuilder.Entity("InfraFlow.Domain.HttpRequestLog.Entities.AppHttpRequestLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AppSnapshotId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<string>("BrowserInfo")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ClientIpAddress")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid?>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<string>("Device")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("DeviceOs")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ExecutionDuration")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("ExecutionTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("HttpMethod")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("MethodName")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("RequestBody")
                        .HasColumnType("text");

                    b.Property<string>("RequestHeaders")
                        .HasColumnType("text");

                    b.Property<string>("RequestQuery")
                        .HasColumnType("text");

                    b.Property<string>("RequestUrl")
                        .HasColumnType("text");

                    b.Property<string>("ResponseStatus")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("ServiceName")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<Guid?>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<string>("User")
                        .HasColumnType("text");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("AppSnapshotId");

                    b.HasIndex("CorrelationId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("SessionId");

                    b.ToTable("AppHttpRequestLogs", (string)null);
                });

            modelBuilder.Entity("InfraFlow.Domain.Identity.Entities.AppAccessToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AppSnapshotId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid?>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("RevokedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.HasKey("Id");

                    b.HasIndex("AppSnapshotId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("CorrelationId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("SessionId");

                    b.HasIndex("Token");

                    b.ToTable("AppAccessTokens", (string)null);
                });

            modelBuilder.Entity("InfraFlow.Domain.Identity.Entities.AppPermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Action")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid?>("AppSnapshotId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid?>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DeleterId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifierId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Resource")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid?>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AppSnapshotId");

                    b.HasIndex("CorrelationId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("DeleterId");

                    b.HasIndex("LastModifierId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("SessionId");

                    b.ToTable("AppPermissions", (string)null);
                });

            modelBuilder.Entity("InfraFlow.Domain.Identity.Entities.AppRefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AppSnapshotId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid?>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("boolean");

                    b.Property<string>("ReplacedByToken")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime?>("RevokedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("AppSnapshotId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("CorrelationId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("SessionId");

                    b.HasIndex("Token");

                    b.ToTable("AppRefreshTokens", (string)null);
                });

            modelBuilder.Entity("InfraFlow.Domain.Identity.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AppSnapshotId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid?>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DeleterId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifierId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid?>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AppSnapshotId");

                    b.HasIndex("CorrelationId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("DeleterId");

                    b.HasIndex("LastModifierId");

                    b.HasIndex("SessionId");

                    b.ToTable("AppRoles", (string)null);
                });

            modelBuilder.Entity("InfraFlow.Domain.Identity.Entities.AppRolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AppPermissionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AppRoleId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AppSnapshotId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid?>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<Guid?>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AppPermissionId");

                    b.HasIndex("AppRoleId");

                    b.HasIndex("AppSnapshotId");

                    b.HasIndex("CorrelationId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("SessionId");

                    b.ToTable("AppRolePermissions", (string)null);
                });

            modelBuilder.Entity("InfraFlow.Domain.Identity.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<Guid?>("AppSnapshotId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid?>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DeleterId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailVerified")
                        .HasColumnType("boolean");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifierId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime?>("PasswordChangedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("PhoneVerified")
                        .HasColumnType("boolean");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid?>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("TwoFactorSecret")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("AppSnapshotId");

                    b.HasIndex("CorrelationId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("DeleterId");

                    b.HasIndex("EmailVerified");

                    b.HasIndex("IsActive");

                    b.HasIndex("LastModifierId");

                    b.HasIndex("LockoutEnabled");

                    b.HasIndex("LockoutEnd");

                    b.HasIndex("NormalizedEmail")
                        .IsUnique();

                    b.HasIndex("NormalizedUserName")
                        .IsUnique();

                    b.HasIndex("PhoneVerified");

                    b.HasIndex("SessionId");

                    b.HasIndex("EmailVerified", "IsActive");

                    b.HasIndex("LockoutEnabled", "LockoutEnd");

                    b.ToTable("AppUsers", (string)null);
                });

            modelBuilder.Entity("InfraFlow.Domain.Identity.Entities.AppUserFailedLoginAttempt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AppSnapshotId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AppUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid?>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("FailureReason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("AppSnapshotId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("CorrelationId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("SessionId");

                    b.ToTable("AppUserFailedLoginAttempts", (string)null);
                });

            modelBuilder.Entity("InfraFlow.Domain.Identity.Entities.AppUserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<Guid?>("AppSnapshotId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid?>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeleterId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifierId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ProfilePictureUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<Guid?>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AppSnapshotId");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.HasIndex("CorrelationId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("DeleterId");

                    b.HasIndex("LastModifierId");

                    b.HasIndex("SessionId");

                    b.ToTable("AppUserProfiles", (string)null);
                });

            modelBuilder.Entity("InfraFlow.Domain.Identity.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AppRoleId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AppSnapshotId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid?>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<Guid?>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AppRoleId");

                    b.HasIndex("AppSnapshotId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("CorrelationId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("SessionId");

                    b.ToTable("AppUserRoles", (string)null);
                });

            modelBuilder.Entity("InfraFlow.Domain.Identity.Entities.AppUserSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime>("AccessTokenExpiredTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("AppSnapshotId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid?>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("RefreshTokenExpiredTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AccessToken");

                    b.HasIndex("AppSnapshotId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("CorrelationId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("RefreshToken");

                    b.HasIndex("SessionId");

                    b.ToTable("AppUserSessions", (string)null);
                });

            modelBuilder.Entity("InfraFlow.Domain.Identity.Entities.AppVerificationCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AppSnapshotId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid?>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DeleterId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifierId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<Guid?>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UsedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("VerificationType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AppSnapshotId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("Code");

                    b.HasIndex("CorrelationId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("DeleterId");

                    b.HasIndex("LastModifierId");

                    b.HasIndex("SessionId");

                    b.ToTable("AppVerificationCodes", (string)null);
                });

            modelBuilder.Entity("InfraFlow.Domain.Snapshot.Entities.AppAssembly", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AppSnapshotId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid?>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<string>("Culture")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Location")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PublicKeyToken")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid?>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<string>("Version")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("AppSnapshotId");

                    b.HasIndex("CorrelationId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("SessionId");

                    b.ToTable("AppAssemblies", (string)null);
                });

            modelBuilder.Entity("InfraFlow.Domain.Snapshot.Entities.AppConfigurationDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AppSnapshotId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid?>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AppSnapshotId");

                    b.HasIndex("CorrelationId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("SessionId");

                    b.ToTable("AppConfigurationDetails", (string)null);
                });

            modelBuilder.Entity("InfraFlow.Domain.Snapshot.Entities.AppDatabaseDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AppSnapshotId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid?>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<string>("DatabaseName")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("DatabaseVersion")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Host")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<Guid?>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<int>("TableCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AppSnapshotId");

                    b.HasIndex("CorrelationId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("SessionId");

                    b.ToTable("AppDatabaseDetails", (string)null);
                });

            modelBuilder.Entity("InfraFlow.Domain.Snapshot.Entities.AppDatabaseTableDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AppDatabaseDetailId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AppSnapshotId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid?>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<long>("RecordCount")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<string>("TableName")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("AppDatabaseDetailId");

                    b.HasIndex("AppSnapshotId");

                    b.HasIndex("CorrelationId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("SessionId");

                    b.ToTable("AppDatabaseTableDetails", (string)null);
                });

            modelBuilder.Entity("InfraFlow.Domain.Snapshot.Entities.AppSnapshot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AppSnapshotId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<string>("ApplicationName")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("ApplicationVersion")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid?>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<string>("CpuArchitecture")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("CpuCoreCount")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorId")
                        .HasMaxLength(256)
                        .HasColumnType("uuid");

                    b.Property<string>("CultureInfo")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Environment")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Hostname")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("InterfaceName")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<string>("MachineName")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("MachineOsVersion")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Platform")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid?>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("uuid");

                    b.Property<string>("TotalDiskSpace")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("TotalRam")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.HasKey("Id");

                    b.HasIndex("AppSnapshotId");

                    b.HasIndex("CorrelationId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("SessionId");

                    b.ToTable("AppSnapshots", (string)null);
                });

            modelBuilder.Entity("InfraFlow.Domain.AuditLog.Entities.AppEntityPropertyChange", b =>
                {
                    b.HasOne("InfraFlow.Domain.AuditLog.Entities.AppAuditLog", null)
                        .WithMany("AppEntityPropertyChanges")
                        .HasForeignKey("AppAuditLogId");

                    b.HasOne("InfraFlow.Domain.AuditLog.Entities.AppAuditLog", null)
                        .WithMany()
                        .HasForeignKey("AuditLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InfraFlow.Domain.Identity.Entities.AppAccessToken", b =>
                {
                    b.HasOne("InfraFlow.Domain.Identity.Entities.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("InfraFlow.Domain.Identity.Entities.AppRefreshToken", b =>
                {
                    b.HasOne("InfraFlow.Domain.Identity.Entities.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("InfraFlow.Domain.Identity.Entities.AppRolePermission", b =>
                {
                    b.HasOne("InfraFlow.Domain.Identity.Entities.AppPermission", "AppPermission")
                        .WithMany("AppRolePermissions")
                        .HasForeignKey("AppPermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InfraFlow.Domain.Identity.Entities.AppRole", "AppRole")
                        .WithMany("AppRolePermissions")
                        .HasForeignKey("AppRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppPermission");

                    b.Navigation("AppRole");
                });

            modelBuilder.Entity("InfraFlow.Domain.Identity.Entities.AppUserFailedLoginAttempt", b =>
                {
                    b.HasOne("InfraFlow.Domain.Identity.Entities.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("InfraFlow.Domain.Identity.Entities.AppUserProfile", b =>
                {
                    b.HasOne("InfraFlow.Domain.Identity.Entities.AppUser", "AppUser")
                        .WithOne("AppUserProfile")
                        .HasForeignKey("InfraFlow.Domain.Identity.Entities.AppUserProfile", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("InfraFlow.Domain.Identity.Entities.AppUserRole", b =>
                {
                    b.HasOne("InfraFlow.Domain.Identity.Entities.AppRole", "AppRole")
                        .WithMany("AppUserRoles")
                        .HasForeignKey("AppRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InfraFlow.Domain.Identity.Entities.AppUser", "AppUser")
                        .WithMany("AppUserRoles")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppRole");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("InfraFlow.Domain.Identity.Entities.AppUserSession", b =>
                {
                    b.HasOne("InfraFlow.Domain.Identity.Entities.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("InfraFlow.Domain.Identity.Entities.AppVerificationCode", b =>
                {
                    b.HasOne("InfraFlow.Domain.Identity.Entities.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("InfraFlow.Domain.Snapshot.Entities.AppDatabaseTableDetail", b =>
                {
                    b.HasOne("InfraFlow.Domain.Snapshot.Entities.AppDatabaseDetail", null)
                        .WithMany("AppDatabaseTableDetails")
                        .HasForeignKey("AppDatabaseDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InfraFlow.Domain.AuditLog.Entities.AppAuditLog", b =>
                {
                    b.Navigation("AppEntityPropertyChanges");
                });

            modelBuilder.Entity("InfraFlow.Domain.Identity.Entities.AppPermission", b =>
                {
                    b.Navigation("AppRolePermissions");
                });

            modelBuilder.Entity("InfraFlow.Domain.Identity.Entities.AppRole", b =>
                {
                    b.Navigation("AppRolePermissions");

                    b.Navigation("AppUserRoles");
                });

            modelBuilder.Entity("InfraFlow.Domain.Identity.Entities.AppUser", b =>
                {
                    b.Navigation("AppUserProfile")
                        .IsRequired();

                    b.Navigation("AppUserRoles");
                });

            modelBuilder.Entity("InfraFlow.Domain.Snapshot.Entities.AppDatabaseDetail", b =>
                {
                    b.Navigation("AppDatabaseTableDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
